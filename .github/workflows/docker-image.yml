name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3

        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test    

      - name: Build the Docker image
        run: |
          echo "{docker_tag}=$(date +%s)" >> $GITHUB_ENV
#          echo "{environment_variable_name}={value}" >> $GITHUB_ENV
#          echo "{}={}"  
#          echo "Adding some Markdown content" >> $GITHUB_STEP_SUMMARY
          docker build . --file Dockerfile --tag virtlet:${{env.docker_tag}}

 
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: love7310/virtlet
      
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}        

      


# jobs:
# #  my_job:
# #    name: deploy to staging
#   runs-on: ubuntu-18.04

#   build:
#     runs-on: ubuntu-latest
    
#     steps:
#     - uses: actions/checkout@v3   
#     - uses: actions/setup-node@v3
#       with:
#         node-version: '16'    
#         cache: 'npm'
#     - run: npm ci
#     - run: npm test
    
#     - name: npm install, build and test
#       run: |
#         npm install
#         npm run build --if-present
#         npm test
    
#     - name: Build the Docker image
#       run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
