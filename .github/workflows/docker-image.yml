name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3

        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test   

       
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: set env
        run: echo "RELEASE_VERSION2=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Check output
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tags}}
        
        run: |
          echo $RELEASE_VERSION
          echo $RELEASE_VERSION2
#          echo ${{ steps.vars.outputs.tags }}

      - name: Build the Docker image
        env: 
          DOCKER_TAG: "7"           
          #! DOCKER_USER: ${{ secrets.DOCKER_USER }}
          #! DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          #! DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USER: "love7310@naver.com"
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          DOCKER_PASSWORD: "rlawnsdud#08"
        run: >-          
          echo "docker_tag=work-11" >> $GITHUB_ENV \
          docker build . --file Dockerfile --tag virtlet:${DOCKER_TAG} \
#          echo "environment_variable=$env" 
          

      - name: Login to Docker Hub
        run: echo The username ${DOCKER_USER}
      - name: Login to Docker password
        run: echo  $(DOCKER_PASSWORD)
      - name: Login to Docker user
        run: echo  $DOCKER_USER
      - name: Login to Docker password2
        run: echo $DOCKER_PASSWORD

#          echo "{docker_tag}=${(date +%s)}" >> $GITHUB_ENV \ 
# ${{ steps.vars.outputs.tag }} 
#          echo "{environment_variable_name}={value}" >> $GITHUB_ENV
#          echo "{}={}"  
#          echo "Adding some Markdown content" >> $GITHUB_STEP_SUMMARY



#!       -
#!         name: Login to Docker Hub
#!         uses: docker/login-action@v2
#!         with:
#! #          username: ${{ secrets.DOCKERHUB_USERNAME }}
#! #          password: ${{ secrets.DOCKERHUB_TOKEN }}
#!           username: "love7310@naver.com" # ${ DOCKER_USER }
#!           password: "dckr_pat_vBAeozyHjqkHF4hRVA-R6FSH3gA" #"rlawnsdud#08" # ${ DOCKER_PASSWORD }


#!       -
#!         name: Build and push
#!         uses: docker/build-push-action@v3
#!         with:
#!           push: true
#! #          tags: love7310/virtlet:${{ steps.meta.outputs.tags }}
#!           tags: love7310/virtlet:${DOCKER_TAG}





      #! - name: Set the value
      #!   id: step_one
      #!   run: |
      #!     echo "action_state=yellow" >> $GITHUB_ENV

      #! - name: Use the value
      #!   id: step_two
      #!   env: 
      #!     DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

      #!   run: |
      #!     echo "${{ env.action_state }}" # This will output 'yellow'

      #! - name: Login to Docker Hub
      #!   run: echo The username is ${{ inputs.username }}
      #! - run: echo secret- ${{ secrets.DOCKERHUB_USERNAME }}
      #! - run: echo secret2- {$DOCKERHUB_USERNAME }}
      #! - run: echo dockertag ${{env.docker_tag}} 
      #! - run: echo dockertag2 ${{env.docker_tag2}} 
      #! - run: echo tag ${{ steps.vars.outputs.tags }}
      #! - run: echo tag-label ${{ steps.vars.outputs.tags }}
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          #username: ${{ secrets.DOCKER_USER }}
          #password: ${{ secrets.DOCKER_PASSWORD }}
          username: "love7310"
          password: "rlawnsdud#08"
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: love7310/virtlet
      
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}        

      


# jobs:
# #  my_job:
# #    name: deploy to staging
#   runs-on: ubuntu-18.04

#   build:
#     runs-on: ubuntu-latest
    
#     steps:
#     - uses: actions/checkout@v3   
#     - uses: actions/setup-node@v3
#       with:
#         node-version: '16'    
#         cache: 'npm'
#     - run: npm ci
#     - run: npm test
    
#     - name: npm install, build and test
#       run: |
#         npm install
#         npm run build --if-present
#         npm test
    
#     - name: Build the Docker image
#       run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
